            常用元字符
.	    匹配除换行符以外的任意字符
\w	    匹配字母或数字或下划线或汉字
\s	    匹配任意的空白符
\d	    匹配数字
\b	    匹配单词的开始或结束
^	    匹配字符串的开始
$	    匹配字符串的结束
     
               常用的限定符
*	    重复零次或更多次
+	    重复一次或更多次
?	    重复零次或一次
{n}	    重复n次
{n,}	重复n次或更多次
{n,m}	重复n到m次

re.compile(r'\d+')   # 查找数字,r不转义，\d是匹配数字字符[0-9]，+匹配一个或多个
\b是正则表达式规定的一个特殊代码，代表着单词的开头或结尾，也就是单词的分界处。
假如你要找的是hi后面不远处跟着一个Lucy，你应该用\bhi\b.*\bLucy\b
这里 .是另一个元字符，匹配除了换行符以外的任意字符。*同样是元字符，不过它代表的不是字符，也不是位置，而是数量——它指定*前边的内容可以连续重复使用任意次以使整个表达式得到匹配。
因此.*连在一起就意味着任意数量的不包含换行的字符。
\bhi\b.*\bLucy\b的意思就很明显了：先是一个单词hi,然后是任意个任意字符(但不能是换行)，最后是Lucy这个单词。
0\d\d-\d\d\d\d\d\d\d\d匹配这样的字符串：以0开头，然后是两个数字，然后是一个连字号“-”，最后是8个数字
为了避免那么多烦人的重复，我们也可以这样写这个表达式：0\d{2}-\d{8}。这里\d后面的{2}({8})的意思是前面\d必须连续重复匹配2次(8次)。
\s匹配任意的空白符，包括空格，制表符(Tab)，换行符，中文全角空格等。
\w匹配字母或数字或下划线或汉字等。
\ba\w*\b匹配以字母a开头的单词——先是某个单词开始处(\b)，然后是字母a,然后是任意数量的字母或数字(\w*)，最后是单词结束处(\b)。
^匹配你要用来查找的字符串的开头，$匹配结尾.
比如一个网站如果要求你填写的QQ号必须为5位到12位数字时，可以使用：^\d{5,12}$。#重复的次数不能少于5次，不能多于12次
如果你想查找元字符本身的话,这时你就得使用\来取消这些字符的特殊意义
例如：deerchao\.cn匹配deerchao.cn，C:\\Windows匹配C:\Windows。
